@using Archetype.Models
@using Umbraco.Core.Models
@using RJP.MultiUrlPicker.Models
@using USDA_ARS.Umbraco.Extensions.Models
@model IPublishedContent
@{
    bool bypassParentTopics = Model.GetPropertyValue<bool>("bypassParentTopics");

    ArchetypeModel parentRelatedTopics = null;

    ArchetypeModel currentRelatedTopics = Model.GetPropertyValue<ArchetypeModel>("topicsList");

    if (false == bypassParentTopics)
    {
        IPublishedContent parentNode = Model.Parent;

        if (parentNode != null)
        {
            parentRelatedTopics = parentNode.GetPropertyValue<ArchetypeModel>("topicsList");
        }
    }
}

<!--[if lt IE 9]>
    <div class="IErounded-sidetop"
         style="display:block; height:20px; width:250px; position:relative; left:25px; top:5px;">
        <img src="/images/redesign/rounded-sidetop.png" alt="spacing">
    </div>
    <style>#relatedTopics {margin-top:-10px !important; z-index:300 !important;}</style>
<![endif]-->
<div id="relatedTopics">
    <h1 class="related_topics">Related Topics</h1>
    <ul>
        @if (parentRelatedTopics != null && parentRelatedTopics.Any())
        {
            foreach (var item in parentRelatedTopics)
            {
            @Html.Raw(OutputTopic(item))
            }
        }

        @if (currentRelatedTopics != null && currentRelatedTopics.Any())
        {
            foreach (var item in currentRelatedTopics)
            {
            @Html.Raw(OutputTopic(item))
            }
        }
    </ul>
</div>
<!--[if lt IE 9]>
    <div class="IErounded-sidebot"
            style="display:block; height:20px; width:250px; position:relative; left:25px; top:-12px;">
        <img src="/images/redesign/rounded-sidebottom.png" alt="spacing">
    </div>
<![endif]-->



@functions
{
    string OutputTopic(ArchetypeFieldsetModel item)
    {
        string html = null;

        if (item.Alias == "topicsItem")
        {
            string urlLink = "#";

            if (item.HasValue("location"))
            {
                Link navLink = item.GetValue<MultiUrls>("location").FirstOrDefault();

                if (navLink != null && navLink.Url != null)
{
                urlLink = navLink.Url;
}
            }

            html = "<li><a href=\"" + urlLink + "\">" + item.GetValue<string>("title") + "</a></li>";
        }
        else if (item.Alias == "topicsHeader")
        {
            html = "<h2 class=\"related_topics\">" + item.GetValue<string>("sectionTitle") + "</h2>";
        }

        html += "\r\n";

        return html;
    }

}