@using Archetype.Models
@using Umbraco.Core.Models
@using RJP.MultiUrlPicker.Models
@using USDA_ARS.Umbraco.Extensions
@using USDA_ARS.Umbraco.Extensions.Models
@using Newtonsoft.Json
@model IPublishedContent
@{
   string modeCode = "";

   modeCode = Model.GetPropertyValue<string>("modeCode");

   IPublishedContent rootPage = Model.AncestorOrSelf(1);

   if (false == string.IsNullOrEmpty(Request.QueryString["modeCode"]))
   {
      modeCode = Request.QueryString.Get("modeCode");
   }
   if (true == string.IsNullOrEmpty(modeCode))
   {
      modeCode = rootPage.GetPropertyValue<string>("modeCode");
   }

   ArchetypeModel currentRelatedTopics = null;

   if (Model.Parent != null && Model.Parent.DocumentTypeAlias == "NationalProgramFolderContainer")
   {
      currentRelatedTopics = Model.Parent.GetPropertyValue<ArchetypeModel>("leftNavPicker");
   }
   else
   {
      currentRelatedTopics = Model.GetPropertyValue<ArchetypeModel>("leftNavPicker");
   }


   List<IPublishedContent> siteRelatedTopicsTop = null;
   List<IPublishedContent> siteRelatedTopicsBottom = null;

   USDA_ARS.Umbraco.Extensions.Helpers.Topics.GetSiteGlobalNav(Model, ref siteRelatedTopicsTop, ref siteRelatedTopicsBottom);

   bool foundExternalLink = false;
}

<!--[if lt IE 9]>
    <div class="IErounded-sidetop"
         style="display:block; height:20px; width:250px; position:relative; left:25px; top:5px;">
        <img src="/images/redesign/rounded-sidetop.png" alt="spacing">
    </div>
    <style>#relatedTopics {margin-top:-10px !important; z-index:300 !important;}</style>
<![endif]-->
<div id="relatedTopics">
   <h1 class="related_topics">Related Topics</h1>
   <ul>
      @if (siteRelatedTopicsTop != null && siteRelatedTopicsTop.Any())
      {
         foreach (var siteNavTop in siteRelatedTopicsTop)
         {
            ArchetypeModel navigationItems = siteNavTop.GetPropertyValue<ArchetypeModel>("navigationItems");

            foreach (var navItem in navigationItems)
            {
               if (navItem != null)
               {
         @Html.Raw(OutputTopic(navItem, modeCode, ref foundExternalLink))
               }
            }
         }
      }

      @if (currentRelatedTopics != null && currentRelatedTopics.Any())
      {
         foreach (var topicList in currentRelatedTopics)
         {
            foreach (var topicItemList in topicList.Properties)
            {
               TopicPickerValue topicItemListValue = JsonConvert.DeserializeObject<TopicPickerValue>(topicItemList.Value.ToString());

               if (topicItemListValue != null && false == string.IsNullOrEmpty(topicItemListValue.Value))
               {
                  ArchetypeModel topicItem = USDA_ARS.Umbraco.Extensions.Helpers.Topics.GetTopicsById(Convert.ToInt32(topicItemListValue.Value));

                  if (topicItem != null)
                  {
                     foreach (var item in topicItem)
                     {
         @Html.Raw(OutputTopic(item, modeCode, ref foundExternalLink))
                     }
                  }
               }
            }
         }
      }

      @if (Model.DocumentTypeAlias == "NationalProgram" || Model.Parent.DocumentTypeAlias == "NationalProgramFolderContainer")
      {
         @Html.Partial("~/Views/Partials/Modules/ResearchProgramNavigation.cshtml", Model)
      }

      @if (siteRelatedTopicsBottom != null && siteRelatedTopicsBottom.Any())
      {
         foreach (var siteNavBottom in siteRelatedTopicsBottom)
         {
            ArchetypeModel navigationItems = siteNavBottom.GetPropertyValue<ArchetypeModel>("navigationItems");

            foreach (var navItem in navigationItems)
            {
               if (navItem != null)
               {
         @Html.Raw(OutputTopic(navItem, modeCode, ref foundExternalLink))
               }
            }
         }
      }
   </ul>
   @if (true == foundExternalLink)
   {
      <br />
      <span style="padding: 0 0 0 20px;">* Goes to a non-federal site</span>
   }
</div>
<!--[if lt IE 9]>
    <div class="IErounded-sidebot"
            style="display:block; height:20px; width:250px; position:relative; left:25px; top:-12px;">
        <img src="/images/redesign/rounded-sidebottom.png" alt="spacing">
    </div>
<![endif]-->



@functions
{
   string OutputTopic(ArchetypeFieldsetModel item, string modeCode, ref bool foundExternalLink)
   {
      string html = null;

      if (item.Alias == "topicsItem")
      {
         string urlLink = "#";
         string targetLink = "";
         bool appendModeCode = false;

         if (item.HasValue("location"))
         {
            Link navLink = item.GetValue<MultiUrls>("location").FirstOrDefault();

            if (navLink != null && navLink.Url != null)
            {
               urlLink = navLink.Url;
            }
         }
         else if (item.HasValue("linkToFile"))
         {
            urlLink = item.GetValue<string>("linkToFile");
            targetLink = " target=\"_blank\"";
         }


         appendModeCode = item.GetValue<bool>("appendModeCode");

         if (true == appendModeCode && false == string.IsNullOrEmpty(modeCode))
         {
            if (true == urlLink.Contains("?"))
            {
               urlLink += "&";
            }
            else
            {
               urlLink += "?";
            }
            urlLink += "modeCode=" + modeCode;
         }

         string externalIcon = "";

         if (urlLink.StartsWith("http"))
         {
            if (urlLink.ToLower().IndexOf("usda.gov") < 0)
            {
               externalIcon = " *";

               foundExternalLink = true;
            }
         }

         html = "<li><a href=\"" + urlLink + "\"" + targetLink + ">" + item.GetValue<string>("title") + externalIcon + "</a></li>";
      }
      else if (item.Alias == "topicsHeader")
      {
         html = "<h2 class=\"related_topics\">" + item.GetValue<string>("sectionTitle") + "</h2>";
      }

      html += "\r\n";

      return html;
   }

}