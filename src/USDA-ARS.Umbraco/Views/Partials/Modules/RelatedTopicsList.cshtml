@using Archetype.Models
@using Umbraco.Core.Models
@using RJP.MultiUrlPicker.Models
@using USDA_ARS.Umbraco.Extensions
@using USDA_ARS.Umbraco.Extensions.Models
@using Newtonsoft.Json
@model IPublishedContent
@{
    ArchetypeModel parentRelatedTopics = null;

    IPublishedContent rootPage = Model.AncestorOrSelf(1);

    ArchetypeModel currentRelatedTopics = Model.GetPropertyValue<ArchetypeModel>("leftNavPicker");

    List<ArchetypeModel> siteRelatedTopicsTop = null;
    List<ArchetypeModel> siteRelatedTopicsBottom = null;

    USDA_ARS.Umbraco.Extensions.Helpers.Topics.GetSiteGlobalNav(Model, ref siteRelatedTopicsTop, ref siteRelatedTopicsBottom);

    parentRelatedTopics = rootPage.GetPropertyValue<ArchetypeModel>("leftNavPicker");

    bool foundExternalLink = false;
}

<!--[if lt IE 9]>
    <div class="IErounded-sidetop"
         style="display:block; height:20px; width:250px; position:relative; left:25px; top:5px;">
        <img src="/images/redesign/rounded-sidetop.png" alt="spacing">
    </div>
    <style>#relatedTopics {margin-top:-10px !important; z-index:300 !important;}</style>
<![endif]-->
<div id="relatedTopics">
    <h1 class="related_topics">Related Topics</h1>
    <ul>
        @if (siteRelatedTopicsTop != null && siteRelatedTopicsTop.Any())
        {
            foreach (var siteNavTopList in siteRelatedTopicsTop)
            {
                foreach (var siteNavTop in siteNavTopList)
                {
                    if (siteNavTop != null)
                    {
                        @Html.Raw(OutputTopic(siteNavTop, ref foundExternalLink))
                    }
                }
            }
        }


        @if (currentRelatedTopics != null && currentRelatedTopics.Any())
        {
            foreach (var topicList in currentRelatedTopics)
            {
                foreach (var topicItemList in topicList.Properties)
                {
                    TopicPickerValue topicItemListValue = JsonConvert.DeserializeObject<TopicPickerValue>(topicItemList.Value.ToString());

                    if (topicItemListValue != null && false == string.IsNullOrEmpty(topicItemListValue.Value))
                    {
                        ArchetypeModel topicItem = USDA_ARS.Umbraco.Extensions.Helpers.Topics.GetTopicsByGuid(Guid.Parse(topicItemListValue.Value), rootPage.Descendants());

                        if (topicItem != null)
                        {
                            foreach (var item in topicItem)
                            {
                                @Html.Raw(OutputTopic(item, ref foundExternalLink))
                            }
                        }
                    }
                }
            }
        }
    </ul>
    @if (true == foundExternalLink)
    {
        <br />
        <span style="padding: 0 0 0 20px;">* Goes to a non-federal site</span>
    }
</div>
<!--[if lt IE 9]>
    <div class="IErounded-sidebot"
            style="display:block; height:20px; width:250px; position:relative; left:25px; top:-12px;">
        <img src="/images/redesign/rounded-sidebottom.png" alt="spacing">
    </div>
<![endif]-->



@functions
{
    string OutputTopic(ArchetypeFieldsetModel item, ref bool foundExternalLink)
    {
        string html = null;

        if (item.Alias == "topicsItem")
        {
            string urlLink = "#";

            if (item.HasValue("location"))
            {
                Link navLink = item.GetValue<MultiUrls>("location").FirstOrDefault();

                if (navLink != null && navLink.Url != null)
                {
                    urlLink = navLink.Url;
                }
            }

            string externalIcon = "";

            if (urlLink.StartsWith("http"))
            {
                if (urlLink.ToLower().IndexOf("usda.gov") < 0)
                {
                    externalIcon = " *";

                    foundExternalLink = true;
                }
            }

            html = "<li><a href=\"" + urlLink + "\">" + item.GetValue<string>("title") + externalIcon + "</a></li>";
        }
        else if (item.Alias == "topicsHeader")
        {
            html = "<h2 class=\"related_topics\">" + item.GetValue<string>("sectionTitle") + "</h2>";
        }

        html += "\r\n";

        return html;
    }

}