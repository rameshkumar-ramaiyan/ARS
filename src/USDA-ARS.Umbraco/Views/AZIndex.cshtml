@using Archetype.Extensions
@using Archetype.Models
@using Umbraco.Core.Models
@using RJP.MultiUrlPicker.Models
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "_Master.cshtml";

    IPublishedContent currentPage = Model.Content;
    IPublishedContent rootNode = currentPage.AncestorOrSelf(1);

    List<IPublishedContent> alphaList = null;

    List<IPublishedContent> nodeList = rootNode.Descendants().Where(p => p.Level <= 3).ToList();

    if (nodeList != null && nodeList.Any())
    {
        nodeList = nodeList.OrderBy(p => p.Name).ToList();

        alphaList = nodeList.DistinctBy(p => p.Name.Substring(0, 1)).ToList();

        if (alphaList != null && alphaList.Any())
        {
            alphaList = alphaList.OrderBy(p => p.Name).ToList();
        }
    }

    bool hideHeaderTitle = currentPage.GetPropertyValue<bool>("hidePageTitle");

    string bodyText = currentPage.GetPropertyValue<string>("bodyText");
    string modeCode = "";

    if (Request.QueryString["modeCode"] != null)
    {
        modeCode = Request.QueryString.Get("modeCode");
    }

    bodyText = USDA_ARS.Umbraco.Extensions.Helpers.BodyTextTags.ReplaceTags(bodyText, modeCode);
}

@Html.Partial("~/Views/Partials/Modules/NavigationLinksSub.cshtml", currentPage)

<div id="fullPage">

    @Html.Partial("~/Views/Partials/Modules/RelatedTopicsList.cshtml", currentPage)

    <div id="pageContent">

        @if (false == hideHeaderTitle)
        {
            <table border="0" width="100%">
                <tr>
                    <td class="pageHeading">@currentPage.Name</td>
                </tr>
                <tr>
                    <td>
                        <img src="/images/headline_bar.gif" alt="headline bar" width="100%" />
                    </td>
                </tr>
            </table>
        }


        <!-- display URLs of subpages start -->
        <!--  display URLs of subpages end -->
        <!-- document content start -->
        <p id="content" align="center">
            @{
                int i = 0;

                if (alphaList != null && alphaList.Any())
                {
                    @Html.Raw("[ ")

                    foreach (IPublishedContent alphaItem in alphaList)
                    {
                        string letter = alphaItem.Name.Substring(0, 1).ToUpper();

                        if (i > 0)
                        {
                            @Html.Raw(" | ")
                        }
                        @Html.Raw("<a href=\"#"+ letter + "\">" + letter + "</a>")

                        i++;
                    }

                    @Html.Raw(" ]")
                }
            }
        </p>

        <div id="az-index">
            @if (alphaList != null && alphaList.Any())
            {
                foreach (IPublishedContent alphaItem in alphaList)
                {
                    string letter = alphaItem.Name.Substring(0, 1).ToUpper();
                    List<IPublishedContent> nodeListFiltered = nodeList.Where(p => p.Name.Substring(0, 1).ToLower() == letter.ToLower()).ToList();

                    @Html.Raw("<h2 id=\""+ letter + "\">"+ letter + "</h2>")

                    <ul>
                        @if (nodeListFiltered != null && nodeListFiltered.Any())
                        {
                            foreach(IPublishedContent nodeItem in nodeListFiltered)
                            {
                                <li><a href="@nodeItem.Url">@nodeItem.Name</a></li>
                            }

                            <p align="right"><a href="#pageComplete" id="anch_85">Back to top ↑</a></p>
                        }
                    </ul>
                }

            }
        </div>

        <!-- document content end -->


        <br />



        <p></p>


    </div>
</div>