@using Archetype.Extensions
@using Archetype.Models
@using Umbraco.Core.Models
@using RJP.MultiUrlPicker.Models
@using USDA_ARS.Umbraco.Extensions.Helpers
@using USDA_ARS.Umbraco.Extensions.Helpers.Aris
@using USDA_ARS.Umbraco.Extensions.Models.Aris
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
	Layout = "_Master.cshtml";

	IPublishedContent currentPage = Model.Content;

	string bodyText = currentPage.GetPropertyValue<string>("bodyText");
	string accnNo = "";
	int accnNoInt = 0;
	string fy = "";
	bool showPubs = false;
	string locationModeCode = "";
	bool altLocationLookup = false;

	ProjectInfo projectInfo = null;
	IPublishedContent projectLocation = currentPage;
	List<ProjectReport> projectReport = null;
	List<ProjectAccomplishment> projectAccompList = null;
	List<ProjectPublication> projectPublicationByYearList = null;
	List<UsdaPublication> projectPublicationList = null;

	accnNo = Request.QueryString["accnNo"];
	fy = Request.QueryString["fy"];
	showPubs = Request.QueryString["showpubs"] != null && Request.QueryString["showpubs"] == "true";

	bodyText = BodyTextTags.ReplaceTags(bodyText, "");

	if (false == string.IsNullOrWhiteSpace(accnNo) && int.TryParse(accnNo, out accnNoInt))
	{
		projectInfo = Projects.GetProjectInfo(accnNoInt);

		if (projectInfo != null)
		{
			locationModeCode = projectInfo.ModeCode1 + projectInfo.ModeCode2 + projectInfo.ModeCode3 + projectInfo.ModeCode4;

			projectLocation = Nodes.GetNodeByModeCode(locationModeCode, false);
		}

		if (false == string.IsNullOrEmpty(fy))
		{
			projectReport = Projects.GetProjectReport(accnNoInt, fy);
			projectAccompList = Projects.GetProjectAccomplishments(accnNoInt, fy);
			projectPublicationByYearList = Publications.GetPublicationsByProjectYear(accnNoInt, fy);
		}
		if (true == showPubs)
		{
			projectPublicationList = Publications.GetPublicationsByProject(accnNoInt);
		}
	}

	if (projectLocation == null)
	{
		altLocationLookup = true;
		projectLocation = Model.Content;
	}
}

@Html.Partial("~/Views/Partials/Modules/NavigationLinksSub.cshtml", currentPage)

<div id="fullPage">

	@Html.Partial("~/Views/Partials/Modules/RelatedTopicsList.cshtml", projectLocation)

	<div id="pageContent">

		<script language="javascript">
	<!--
	var remote = null;
	function rs(n,u,w,h) {
	remote = window.open(u, n, 'width=' + w + ',height=' + h +',refresh=yes,resizable=yes,scrollbars=yes');
	if (remote != null) {
	if (remote.opener == null)
	remote.opener = self;
	window.name = 'nps2000';
	remote.location.href = u;
	}
	}
	//-->
		</script>

		@if (projectInfo != null)
		{
			<font face="Verdana,Geneva,Arial,Helvetica,sans-serif" size="-1">
				<strong>Research Project: </strong>

				@if (false == string.IsNullOrEmpty(fy))
				{
					<a href="/research/project/?accnNo=@(accnNo)">@(projectInfo.ProjectTitle)</a>
				}
				else
				{
					@(projectInfo.ProjectTitle)
				}
				<p>
					<strong>
						Location:
						@if (true == altLocationLookup)
						{
							Location locationAlt = Locations.GetLocationObjectByModeCode(locationModeCode);
							locationModeCode = ModeCodes.ModeCodeAddDashes(locationModeCode);

							if (locationAlt != null)
							{
								<a href="/people-locations/people-list-offices/?modeCode=@(locationModeCode)" class="projectNav">@Locations.GetLocationNameByModeCode(locationAlt.ModeCodeConcat)</a>
							}
						}
						else
						{
							if (projectLocation != null)
							{
								<a href="@(projectLocation.Url)" id="anch_62">@(projectLocation.Name)</a>
							}
						}

					</strong>
				</p>
			</font>

			if (false == string.IsNullOrEmpty(fy))
			{
				<b><font size="-1" face="arial,helvetica" color="navy">@(fy) Annual Report</font></b>

				if (projectReport != null && projectReport.Any())
				{
					foreach (ProjectReport report in projectReport)
					{
						<p>
							<br />
							<strong>@(report.VisualQuestionNo). @(report.Question)</strong>
							<br />

							@if (report.QuestionNo == 40 && report.Response.Trim() == "None")
							{
								if (projectAccompList != null && projectAccompList.Any())
								{
									foreach (ProjectAccomplishment projectAccomp in projectAccompList)
									{
										if (projectAccomp.AccomplishNo != 1)
										{
										<p>@Html.Raw(projectAccomp.AccomplishNo + ". " + projectAccomp.Accomplishment)</p>}
										else
										{
											@Html.Raw(projectAccomp.AccomplishNo + ". " + projectAccomp.Accomplishment)
}
									}
								}
							}
							else
							{
								@Html.Raw(report.Response)
							}
							</p>
					}
				}

				if (projectPublicationByYearList != null && projectPublicationByYearList.Any())
				{

					<p>
						<br />
						<strong>Review Publications</strong>
						<br />
						@foreach (ProjectPublication publication in projectPublicationByYearList)
						{
							<em><a href="/research/publications/publication/?seqNo115=@(publication.SeqNo115)" id="anch_60">@(publication.Publication)</a><br></em>
						<p></p>
						}

						</p>
				}

			}
			else if (true == showPubs)
			{
				if (projectPublicationList != null && projectPublicationList.Any())
				{
					<p>
						<font face="Verdana,Geneva,Arial,Helvetica,sans-serif" size="-1">


						</font>

						<font class="hdrBlackBold">
							Publications
						</font>

						<font size="-2">
							(Clicking on the reprint icon
							<img src="/images/reprintURLIcon.gif" alt="Reprint Icon" border="0">
							will take you to the publication reprint.)
						</font>

						<br />
						<br />
					</p>

					foreach (UsdaPublication publication in projectPublicationList)
					{
						<p>
							<a href="/research/publications/publication/?seqNo115=@(publication.SeqNo115)" class="projectNav" id="anch_60">@publication.Title</a>
							@if (false == string.IsNullOrEmpty(publication.ReprintUrl))
							{
								<a href="http://@(publication.ReprintUrl)" target="_blank" title="Reprint URL" id="anch_74">
									<img src="/images/reprintURLIcon.gif" alt="Reprint Icon" border="0" style="padding-left:15px;" />
								</a>
							}
							- (@(Publications.PublicationType(publication.PubTypeCode)))
							<br />
							@(publication.Citation)
							<br />
							<img src="/images/content-divider.gif" />
						</p>}
				}
			}
			else
			{
				<p>
					<font face="Verdana,Geneva,Arial,Helvetica,sans-serif" size="-1">


					</font>

					<font size="2">
						Project Number: @projectInfo.ProjectNumber
						<br />
						Project Type: @Projects.ProjectTypeByCode(projectInfo.ProjectType)
					</font>
				</p><p>
					<font size="2">
						<font size="-2"></font>



					</font>
				</p><p>
					<font size="2">
						<font face="arial,helvetica" size="-1">
							Start Date: @projectInfo.DateStart.ToString("MMM d, yyyy")
							<br>
							End Date: @projectInfo.DateTermination.ToString("MMM d, yyyy")
						</font>
					</font>
				</p><p><font size="2"><font face="arial,helvetica" size="-1">  </font></font></p><p>
					<font size="2">
					</font>

					<strong>Objective:</strong>
					<br>
					@Html.Raw(projectInfo.Objective)
				</p><p>
					<strong>Approach:</strong>
					<br>
					@Html.Raw(projectInfo.Approach)
				</p><p>

				</p>
			}
		}
		else
		{
			<em>Invalid project</em>
		}


	</div>

</div>